<#+
/// <summary>
/// These settings can be used to customize the output of T4TS.
/// The default for all settings are determined by T4TS.tt in ReadSettings().
/// </summary>
readonly Dictionary<string, object> SettingsValues = new Dictionary<string, object>()
{
    // The default module of the generated interface. If a module is 
    // not specified by the TypeScriptInterfaceAttribute, the interface 
    // will belong to this module (may be empty, in which case the 
    // interface will be globally accessible).
    // Type: string, defaults to "T4TS" if not specified.
    { "DefaultModule", null },

    // The default value for the Optional flag for an interface member.
    // If not specified by the TypeScriptInterfaceAttribute, the Optional
    // flag will be set to this value. If the Optional flag is true, the
    // generated member will look like "member?: type" instead of "member: type".
    // Type: bool?, defaults to false if not specified.
    { "DefaultOptional", null },
    
    // The default value for the CamelCase flag for an interface member name.
    // If set to true, the first character of member names will be lower cased.
    // Type: bool?, defaults to false if not specified.
    { "DefaultCamelCaseMemberNames", null },

    // The default string to prefix interface names with. For instance, you
    // might want to prefix the names with an "I" to get conventional
    // interface names.
    // Type: string, defaults to "" if not specified.
    { "DefaultInterfaceNamePrefix", null },

    // The version of Typescript that is targeted. This is required to handle
    // breaking changes in the language grammar and/or compiler.
    // Type: System.Version
    { "CompatibilityVersion", null },

    // The default value for DateTime type translation.
    // Type: bool?, defaults to false if not specified.
    { "UseNativeDates", null }
};
#>