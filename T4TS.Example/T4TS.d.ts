/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

// -- Begin global interfaces
    /** Generated from T4TS.Example.Models.Barfoo **/
    interface Barfoo {
        Number: number;
        Complex: T4TS.OverridenName;
        Name: string;
        DateTime: string;
        DateTimeOffset: string;
    }
// -- End global interfaces

declare module External {
    /** Generated from T4TS.Example.Models.ModelFromDifferentProject **/
    export interface ModelFromDifferentProject {
        Id: number;
    }
}

declare module Fooz {
    /** Generated from T4TS.Example.Models.Foobar **/
    export interface IFoobar {
        OverrideAll?: any;
        AGuid: string;
        Recursive: Fooz.IFoobar;
        NullableInt: number;
        NullableDouble: number;
        NestedObjectArr: Barfoo[];
        NestedObjectList: Barfoo[];
        TwoDimensions: string[][];
        ThreeDimensions: Barfoo[][][];
        camelCasePlease: number;
        DoNotIgnoreMe: number;
    }
}

declare module T4TS {
    /** Generated from T4TS.Example.Models.InheritanceTest1 **/
    export interface InheritanceTest1 extends Barfoo {
        SomeString: string;
        Recursive: Fooz.IFoobar;
    }
    /** Generated from T4TS.Example.Models.InheritanceTest2 **/
    export interface InheritanceTest2 extends T4TS.InheritanceTest1 {
        SomeString2: string;
        Recursive2: Fooz.IFoobar;
    }
    /** Generated from T4TS.Example.Models.InheritanceTest3 **/
    export interface InheritanceTest3 extends T4TS.OverridenName {
        SomeString3: string;
        Recursive3: Fooz.IFoobar;
    }
    /** Generated from T4TS.Example.Models.InheritanceTest4 **/
    export interface InheritanceTest4 {
        SomeString4: string;
        Recursive4: Fooz.IFoobar;
    }
    /** Generated from T4TS.Example.Models.InheritanceTestExternal **/
    export interface InheritanceTestExternal extends External.ModelFromDifferentProject {
    }
    /** Generated from T4TS.Example.Models.Inherited **/
    export interface OverridenName {
        OtherName?: string;
        Integers: number[];
        Doubles: number[];
        TwoDimList: number[][];
        [index: number]: Barfoo;
    }
    /** Generated from T4TS.Example.Models.Partial **/
    export interface Partial {
        FromFirstClass: string;
    }
    /** Generated from T4TS.Example.Models.Partial **/
    export interface Partial {
        FromSecondClass: string;
        AlsoSecondClass: any;
    }
    /** Generated from T4TS.Tests.Fixtures.Basic.BasicModel **/
    export interface BasicModel {
        MyProperty: number;
    }
    /** Generated from T4TS.Tests.Fixtures.Enumerable.EnumerableModel **/
    export interface EnumerableModel {
        NormalProperty: number;
        PrimitiveArray: number[];
        PrimitiveList: number[];
        InterfaceArray: T4TS.BasicModel[];
        InterfaceList: T4TS.BasicModel[];
        DeepArray: number[][];
        DeepList: number[][];
    }
    /** Generated from T4TS.Tests.Fixtures.ExternalProp.ExternalPropModel **/
    export interface ExternalPropModel {
        Basic: T4TS.BasicModel;
        External: External.ModelFromDifferentProject;
    }
    /** Generated from T4TS.Tests.Fixtures.Inheritance.InheritanceModel **/
    export interface InheritanceModel extends T4TS.OtherInheritanceModel {
        OnInheritanceModel: T4TS.BasicModel;
    }
    /** Generated from T4TS.Tests.Fixtures.Inheritance.OtherInheritanceModel **/
    export interface OtherInheritanceModel extends External.ModelFromDifferentProject {
        OnOtherInheritanceModel: T4TS.BasicModel;
    }
    /** Generated from T4TS.Tests.Fixtures.Nullable.NullableModel **/
    export interface NullableModel {
        NullableInt: number;
        NullableDouble: number;
    }
    /** Generated from T4TS.Tests.Fixtures.Partial.PartialModel **/
    export interface PartialModel extends External.ModelFromDifferentProject {
        OnPartialModel: T4TS.BasicModel;
    }
    /** Generated from T4TS.Tests.Fixtures.Partial.PartialModel **/
    export interface PartialModel extends External.ModelFromDifferentProject {
        OnOtherPartialModel: T4TS.BasicModel;
    }
    /** Generated from T4TS.Tests.Models.LocalModel **/
    export interface LocalModel {
        Id: number;
        Optional?: string;
    }
    /** Generated from T4TS.Tests.Models.ReservedPropModel **/
    export interface ReservedPropModel {
        class: string;
        readonly: string;
        public?: boolean;
    }
}
