using Microsoft.VisualStudio.TestTools.UnitTesting;
using T4TS.Example.Models;
using T4TS.Tests.Fixtures.Basic;
using T4TS.Tests.Utils;

namespace T4TS.Tests.Fixtures.Enumeration
{
    [TestClass]
    public class Test
    {
        [TestMethod]
        public void EnumerationModelHasExpectedOutput()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(EnumerationModel),
                typeof(BasicModel),
                typeof(ExplicitValueEnum),
                typeof(ImplicitValueEnum)
            ).ToEqual(ExpectedOutput);
        }

        [TestMethod]
        public void EnumerationModelMissing()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(EnumerationModel),
                typeof(BasicModel),
                typeof(ExplicitValueEnum),
                typeof(ImplicitValueEnum))
                    .WithTraverserSettings(
                        (settings) =>
                        {
                            settings.ResolveReferences = true;
                            settings.EnumFilter = (codeEnum) => false;
                        })
                    .ToEqual(ExpectedOutput);
        }

        const string ExpectedOutput = @"/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module T4TS.Tests.Fixtures.Basic {
    /** Generated from T4TS.Tests.Fixtures.Basic.BasicModel */
    export interface BasicModel {
        MyProperty: number;
        SomeDateTime: string;
    }
}

declare module T4TS.Tests.Fixtures.Enumeration {
    /** Generated from T4TS.Tests.Fixtures.Enumeration.ExplicitValueEnum */
    export enum ExplicitValueEnum {
        First = 1,
        Second = 2,
        Fifth = 5
    }
    /** Generated from T4TS.Tests.Fixtures.Enumeration.ImplicitValueEnum */
    export enum ImplicitValueEnum {
        First = 0,
        Second = 1,
        Third = 2
    }
    /** Generated from T4TS.Tests.Fixtures.Enumeration.EnumerationModel */
    export interface EnumerationModel {
        ExplicitProperty: T4TS.Tests.Fixtures.Enumeration.ExplicitValueEnum;
        ExplicitArray: T4TS.Tests.Fixtures.Enumeration.ExplicitValueEnum[];
        ExplicitList: T4TS.Tests.Fixtures.Enumeration.ExplicitValueEnum[];
        ImplicitProperty: T4TS.Tests.Fixtures.Enumeration.ImplicitValueEnum;
        ImplicitArray: T4TS.Tests.Fixtures.Enumeration.ImplicitValueEnum[];
        ImplicitList: T4TS.Tests.Fixtures.Enumeration.ImplicitValueEnum[];
    }
}";

    }
}
