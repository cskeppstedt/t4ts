using Microsoft.VisualStudio.TestTools.UnitTesting;
using T4TS.Example.Models;
using T4TS.Tests.Fixtures.Basic;
using T4TS.Tests.Utils;

namespace T4TS.Tests.Fixtures.Generics
{
    [TestClass]
    public class Test
    {
        [TestMethod]
        public void GenericsExpectedOutput()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(GenericModel<>))
                    .WithSettings((settings) => settings.NamespaceToModuleMap.Add(
                        "T4TS.Tests.Fixtures.Generics",
                        "T4TS"))
                    .ToEqual(ExpectedOutput);
        }

        [TestMethod]
        public void GenericInheritanceExpectedOutput()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(GenericModel<>),
                typeof(InheritGenericModel))
                    .WithSettings((settings) => settings.NamespaceToModuleMap.Add(
                        "T4TS.Tests.Fixtures.Generics",
                        "T4TS"))
                    .ToEqual(ExpectedOutputInheritance);
        }


        const string ExpectedOutput =
@"/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module T4TS {
    /** Generated from T4TS.Tests.Fixtures.Generics.GenericModel<TItem> */
    export interface GenericModel<TItem> {
        Item: TItem;
        SomethingElse: number;
    }
}";
        const string ExpectedOutputInheritance = @"/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module T4TS {
    /** Generated from T4TS.Tests.Fixtures.Generics.GenericModel<TItem> */
    export interface GenericModel<TItem> {
        Item: TItem;
        SomethingElse: number;
    }
    /** Generated from T4TS.Tests.Fixtures.Generics.InheritGenericModel */
    export interface InheritGenericModel extends T4TS.GenericModel<string> {
        SubTypeProperty: string;
    }
}";

    }
}
